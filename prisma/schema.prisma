generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String       @id @default(uuid())
  role                Roles        @default(user)
  firstname           String?
  lastname            String?
  phone_number        String       @unique
  email               String?      @unique
  password            String
  is_blocked          Boolean      @default(false)
  is_activate_account Boolean      @default(false)
  refresh_token       String?
  orders              Order[]
  address             UserAddress?
}

model Media {
  id        String  @id @default(uuid())
  src       String
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id         String      @id @default(uuid())
  userId     String
  productId  String
  count      Int
  code       String      @unique
  status     OrderStatus @default(in_the_proccess)
  pay_status PayStatus?  @default(not_paid)
  product    Product     @relation(fields: [productId], references: [id])
  user       User?       @relation(fields: [userId], references: [id])
}

model Product {
  id           String   @id @default(uuid())
  name         String   @unique
  price        Int
  description  String?
  is_available Boolean? @default(true)
  code         String   @unique
  categories   String[]
  order        Order[]
  media        Media[]
}

model UserAddress {
  id                   String @id @default(uuid())
  fistname             String
  lastname             String
  userId               String @unique
  city                 String
  street               String
  nova_post_department Int?
  user                 User   @relation(fields: [userId], references: [id])
}

enum Roles {
  user
  admin
  moderator
}

enum PayStatus {
  paid
  not_paid
  only_delivery
}

enum OrderStatus {
  sent
  received
  transit
  in_the_proccess
  returned
}
